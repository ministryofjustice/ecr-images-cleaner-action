name: ECR images cleaner
author: zheileman
description: Cleanup images from ECR based on pushed date, keeping images in use in replica sets history.
inputs:
  aws-access-key-id:
    required: true
    description: Access key for IAM User, needed to access the ECR
  aws-secret-access-key:
    required: true
    description: Secret access key for IAM User, needed to access the ECR
  kube-cert:
    required: true
    description: Credentials to authenticate to the kubernetes cluster
  kube-token:
    required: true
    description: Credentials to authenticate to the kubernetes cluster
  kube-cluster:
    required: true
    description: Kubernetes cluster
  kube-namespace:
    required: true
    description: Namespace to retrieve the replica sets
  ecr-repo-name:
    required: true
    description: Name of the ECR repository, usually is team-name/app-name
  additional-tags-regex:
    required: false
    default: .*main.*|.*latest.*
    description: Additional image tags that should not be deleted (regex)
  days-to-keep-old-images:
    required: false
    default: "30"
    description: Number of days to keep images, older will be purged (unless in use or in buffer)
  max-old-images-to-keep:
    required: false
    default: "25"
    description: Number of images to keep even if they are older than the cutoff date

runs:
  using: "composite"
  steps:
    - run: ${{ github.action_path }}/ecr-cleanup.sh
      shell: bash
      env:
        AWS_ACCESS_KEY_ID: ${{ inputs.aws-access-key-id }}
        AWS_SECRET_ACCESS_KEY: ${{ inputs.aws-secret-access-key }}
        KUBE_CERT: ${{ inputs.kube-cert }}
        KUBE_TOKEN: ${{ inputs.kube-token }}
        KUBE_CLUSTER: ${{ inputs.kube-cluster }}
        KUBE_NAMESPACE: ${{ inputs.kube-namespace }}
        ECR_REPO_NAME: ${{ inputs.ecr-repo-name }}
        ADDITIONAL_TAGS_REGEX: ${{ inputs.additional-tags-regex }}
        DAYS_TO_KEEP_OLD_IMAGES: ${{ inputs.days-to-keep-old-images }}
        MAX_OLD_IMAGES_TO_KEEP: ${{ inputs.max-old-images-to-keep }}
